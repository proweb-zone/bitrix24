version: "3.8"

services:
  nginx:
    image: nginx:1.22-alpine
    container_name: bitrix24-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./www:/var/www/html/
      - ./nginx/test.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - bitrix24-network
  # MySQL сервер
  mysql:
    image: mysql:8.0
    container_name: bitrix_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: bitrix-test
      MYSQL_USER: bitrix_user
      MYSQL_PASSWORD: bitrix_password
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/conf/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3306:3306"
    networks:
      - bitrix24-network
    command: --default-authentication-plugin=mysql_native_password
  redis:
    image: redis:7-alpine
    container_name: bitrix24-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bitrix24-network
  php:
    build: .
    container_name: bitrix24-php
    volumes:
      - ./www:/var/www/html/
      - ./tmp:/home/session
      - ./php/php.ini:/usr/local/etc/php/conf.d/bitrix.ini
    depends_on:
      - mysql
      - redis
    networks:
      - bitrix24-network
  # Push Server на основе готового образа Node.js
  # push-server:
  #   image: node:16-alpine
  #   container_name: bitrix-push-server
  #   restart: unless-stopped
  #   working_dir: /app
  #   ports:
  #     - "8893:8893"
  #     - "8894:8894"
  #   volumes:
  #     - ./push_server:/app
  #   environment:
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     - PUSH_PORT=8893
  #     - SUBSCRIBE_PORT=8894
  #     - SIGNATURE_KEY=your-secret-key-123
  #   depends_on:
  #     - redis
  #   command: sh -c "cd /app && npm install && node server.js"
  #   networks:
  #     - bitrix24-network

volumes:
  redis_data:
  mysql_data:
    driver: local

networks:
  bitrix24-network:
    driver: bridge
